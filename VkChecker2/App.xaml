<Application x:Class="VkChecker2.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:VkChecker2"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <!--BUTTONS HEADER-->
        <Style x:Key="ButtonHeader" TargetType="Button">
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="#35363a"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#35363a"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#35363a"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#35363a"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#35363a"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="#35363a"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#35363a"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#35363a"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        
        <!--BUTTON DEF-->
        <Style x:Key="ButtonFlat" TargetType="Button">
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="#404142"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#404142"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#404142"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#454647"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#454647"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="#363e47"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#363e47"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#363e47"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        
        <!--COMBOBOX-->
        <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="#464648" />
        <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="#1d1d1f" />
        <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#888" />
        <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#eee" />
        <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#888" />
        <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="2" Name="Border"
              BorderBrush="{StaticResource ComboBoxNormalBorderBrush}" 
              CornerRadius="0" BorderThickness="0, 0, 0, 0" 
              Background="{StaticResource ComboBoxNormalBackgroundBrush}" />
                <Border Grid.Column="1" Margin="0, 0, 0, 0" BorderBrush="#464648" Name="ButtonBorder"
              CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0" 
              Background="{StaticResource ComboBoxNormalBackgroundBrush}" />

                <Path Name="Arrow" Grid.Column="1" 
            Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
            HorizontalAlignment="Center" Fill="#464648"
            VerticalAlignment="Center" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="#2b2d30"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="#FF8D979E"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="#303235"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="#FF8D979E"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                    <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                    <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
                    <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="#999"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="True">
                    <Setter Property="TextElement.Foreground" Value="White"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="ComboBoxFlatStyle"  TargetType="{x:Type ComboBox}">
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="TextElement.Foreground" Value="White"/>
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" Grid.Column="2"
                ClickMode="Press" Focusable="False"
                IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                            <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
                              HorizontalAlignment="Left" VerticalAlignment="Center"                              
                              Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                            <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
                     IsReadOnly="{TemplateBinding IsReadOnly}"
                     Visibility="Hidden" Background="Transparent"
                     HorizontalAlignment="Left" VerticalAlignment="Center"
                     Focusable="True" >
                                <TextBox.Template>
                                    <ControlTemplate TargetType="TextBox" >
                                        <Border Name="PART_ContentHost" Focusable="False" />
                                    </ControlTemplate>
                                </TextBox.Template>
                            </TextBox>
                            <!-- Popup showing items -->
                            <Popup Name="Popup" Placement="Bottom"
                   Focusable="False" AllowsTransparency="True"
                   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                   PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True"
                    MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                    MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                    <Border Name="DropDownBorder" Background="#303235" Margin="0, 0, 0, 0"
                        CornerRadius="0" BorderThickness="0, 0, 0, 0" 
                        BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"/>
                                    <ScrollViewer Margin="0" SnapsToDevicePixels="True">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                            </Trigger>
                            <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </Trigger>
                            <Trigger Property="ComboBox.IsEditable" Value="True">
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!--RADIOBUTTON-->
        <Style TargetType="{x:Type RadioButton}" >
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <BulletDecorator Cursor="Hand">
                            <BulletDecorator.Bullet>
                                <Grid Height="16" Width="16">
                                    <!--Define size of the Bullet-->
                                    <!--The two borders-->
                                    <Border Name="RadioOuter" Background="Transparent" BorderBrush="Gainsboro" BorderThickness="2" CornerRadius="2" />
                                    <Border CornerRadius="0" Margin="4" Name="RadioMark" Background="#fff" Visibility="Hidden" />
                                </Grid>
                            </BulletDecorator.Bullet>
                            <!--Text element-->
                            <TextBlock Margin="5,1,0,0" Foreground="White">
                        <ContentPresenter />
                            </TextBlock>
                        </BulletDecorator>
                        <!--If item is checked, trigger the visibility of the mark-->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <!--If item is checked, trigger the visibility of the mark and change the color of the selected bullet into a darker gray for better highlighting-->
                                <Setter TargetName="RadioMark" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="RadioOuter" Property="BorderBrush" Value="#fff" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--LISTBOX-->
        <Style x:Key="SimpleListBoxItem" TargetType="ListBoxItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border Name="Border" Padding="3,3,3,3" SnapsToDevicePixels="true">
                            <ContentPresenter/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#595b5d"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        
        <!--COMBOBOX #2-->
        <ControlTemplate x:Key="ComboBoxItemControlTemplate1"
                         TargetType="{x:Type ComboBoxItem}">
            <Border x:Name="Bd"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}"
                    Padding="{TemplateBinding Padding}"
                    SnapsToDevicePixels="True">
                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
                                  Content="{TemplateBinding Content}"
                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled"
                         Value="False">
                    <Setter Property="TextElement.Foreground"
                            TargetName="Bd"
                            Value="White" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected"
                                   Value="False" />
                        <Condition Property="IsMouseOver"
                                   Value="True" />
                        <Condition Property="IsKeyboardFocused"
                                   Value="False" />
                    </MultiTrigger.Conditions>
                    <Setter Property="Background"
                            TargetName="Bd"
                            Value="#38393b" />
                    <Setter Property="BorderBrush"
                            TargetName="Bd"
                            Value="#38393b" />
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected"
                                   Value="True" />
                        <Condition Property="IsMouseOver"
                                   Value="False" />
                        <Condition Property="IsKeyboardFocused"
                                   Value="True" />
                    </MultiTrigger.Conditions>
                    <Setter Property="Background"
                            TargetName="Bd"
                            Value="#424345" />
                    <Setter Property="BorderBrush"
                            TargetName="Bd"
                            Value="#424345" />
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected"
                                   Value="True" />
                        <Condition Property="IsMouseOver"
                                   Value="True" />
                    </MultiTrigger.Conditions>
                    <Setter Property="Background"
                            TargetName="Bd"
                            Value="#424345" />
                    <Setter Property="BorderBrush"
                            TargetName="Bd"
                            Value="#424345" />
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected"
                                   Value="True" />
                        <Condition Property="IsMouseOver"
                                   Value="False" />
                        <Condition Property="IsKeyboardFocused"
                                   Value="False" />
                    </MultiTrigger.Conditions>
                    <Setter Property="Background"
                            TargetName="Bd"
                            Value="#424345" />
                    <Setter Property="BorderBrush"
                            TargetName="Bd"
                            Value="#424345" />
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected"
                                   Value="False" />
                        <Condition Property="IsMouseOver"
                                   Value="False" />
                        <Condition Property="IsKeyboardFocused"
                                   Value="True" />
                    </MultiTrigger.Conditions>
                    <Setter Property="BorderBrush"
                            TargetName="Bd"
                            Value="#38393b" />
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected"
                                   Value="False" />
                        <Condition Property="IsMouseOver"
                                   Value="True" />
                        <Condition Property="IsKeyboardFocused"
                                   Value="True" />
                    </MultiTrigger.Conditions>
                    <Setter Property="Background"
                            TargetName="Bd"
                            Value="#38393b" />
                    <Setter Property="BorderBrush"
                            TargetName="Bd"
                            Value="#38393b" />
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style TargetType="ComboBoxItem">
            <Setter Property="Template"
                Value="{StaticResource ComboBoxItemControlTemplate1}"></Setter>
        </Style>

        
        <!--DATAGRIDVIEW-->
        <Style TargetType="DataGrid">
            <Setter Property="HorizontalGridLinesBrush" Value="#FF333437"/>
            <Setter Property="VerticalGridLinesBrush" Value="#FF333437"/>
        </Style>
        <Style x:Key="NameCellStyle" TargetType="DataGridCell">
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>
        <Style TargetType="{x:Type DataGridRow}">
            <Setter Property="Margin" Value="5, 0, 5, 0"/>
            <Setter Property="Background" Value="#FF333437" />
            <Setter Property="BorderThickness" Value="0,0,0,0"/>
        </Style>
    </Application.Resources>
</Application>
